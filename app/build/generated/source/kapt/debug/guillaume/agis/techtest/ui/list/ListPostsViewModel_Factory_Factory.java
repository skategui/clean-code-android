// Generated by Dagger (https://google.github.io/dagger).
package guillaume.agis.techtest.ui.list;

import dagger.internal.Factory;
import guillaume.agis.techtest.api.HttpErrorUtils;
import guillaume.agis.techtest.usecase.PostsUseCase;
import javax.inject.Provider;

public final class ListPostsViewModel_Factory_Factory
    implements Factory<ListPostsViewModel.Factory> {
  private final Provider<PostsUseCase> postUseCaseProvider;

  private final Provider<HttpErrorUtils> httpErrorUtilsProvider;

  public ListPostsViewModel_Factory_Factory(
      Provider<PostsUseCase> postUseCaseProvider, Provider<HttpErrorUtils> httpErrorUtilsProvider) {
    this.postUseCaseProvider = postUseCaseProvider;
    this.httpErrorUtilsProvider = httpErrorUtilsProvider;
  }

  @Override
  public ListPostsViewModel.Factory get() {
    return provideInstance(postUseCaseProvider, httpErrorUtilsProvider);
  }

  public static ListPostsViewModel.Factory provideInstance(
      Provider<PostsUseCase> postUseCaseProvider, Provider<HttpErrorUtils> httpErrorUtilsProvider) {
    return new ListPostsViewModel.Factory(postUseCaseProvider.get(), httpErrorUtilsProvider.get());
  }

  public static ListPostsViewModel_Factory_Factory create(
      Provider<PostsUseCase> postUseCaseProvider, Provider<HttpErrorUtils> httpErrorUtilsProvider) {
    return new ListPostsViewModel_Factory_Factory(postUseCaseProvider, httpErrorUtilsProvider);
  }

  public static ListPostsViewModel.Factory newFactory(
      PostsUseCase postUseCase, HttpErrorUtils httpErrorUtils) {
    return new ListPostsViewModel.Factory(postUseCase, httpErrorUtils);
  }
}
