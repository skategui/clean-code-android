// Generated by Dagger (https://google.github.io/dagger).
package guillaume.agis.techtest.di;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import guillaume.agis.techtest.api.UserResource;
import javax.inject.Provider;
import retrofit2.Retrofit;

public final class NetworkModule_CreateUserResourceFactory implements Factory<UserResource> {
  private final NetworkModule module;

  private final Provider<Retrofit> retrofitProvider;

  public NetworkModule_CreateUserResourceFactory(
      NetworkModule module, Provider<Retrofit> retrofitProvider) {
    this.module = module;
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public UserResource get() {
    return provideInstance(module, retrofitProvider);
  }

  public static UserResource provideInstance(
      NetworkModule module, Provider<Retrofit> retrofitProvider) {
    return proxyCreateUserResource(module, retrofitProvider.get());
  }

  public static NetworkModule_CreateUserResourceFactory create(
      NetworkModule module, Provider<Retrofit> retrofitProvider) {
    return new NetworkModule_CreateUserResourceFactory(module, retrofitProvider);
  }

  public static UserResource proxyCreateUserResource(NetworkModule instance, Retrofit retrofit) {
    return Preconditions.checkNotNull(
        instance.createUserResource(retrofit),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
