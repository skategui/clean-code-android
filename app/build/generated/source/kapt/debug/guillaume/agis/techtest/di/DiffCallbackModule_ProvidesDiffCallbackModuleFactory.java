// Generated by Dagger (https://google.github.io/dagger).
package guillaume.agis.techtest.di;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import guillaume.agis.techtest.ui.utils.DiffCallback;

public final class DiffCallbackModule_ProvidesDiffCallbackModuleFactory
    implements Factory<DiffCallback> {
  private final DiffCallbackModule module;

  public DiffCallbackModule_ProvidesDiffCallbackModuleFactory(DiffCallbackModule module) {
    this.module = module;
  }

  @Override
  public DiffCallback get() {
    return provideInstance(module);
  }

  public static DiffCallback provideInstance(DiffCallbackModule module) {
    return proxyProvidesDiffCallbackModule(module);
  }

  public static DiffCallbackModule_ProvidesDiffCallbackModuleFactory create(
      DiffCallbackModule module) {
    return new DiffCallbackModule_ProvidesDiffCallbackModuleFactory(module);
  }

  public static DiffCallback proxyProvidesDiffCallbackModule(DiffCallbackModule instance) {
    return Preconditions.checkNotNull(
        instance.providesDiffCallbackModule(),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
