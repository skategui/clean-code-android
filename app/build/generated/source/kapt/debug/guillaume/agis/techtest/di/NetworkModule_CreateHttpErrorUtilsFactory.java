// Generated by Dagger (https://google.github.io/dagger).
package guillaume.agis.techtest.di;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import guillaume.agis.techtest.api.HttpErrorUtils;

public final class NetworkModule_CreateHttpErrorUtilsFactory implements Factory<HttpErrorUtils> {
  private final NetworkModule module;

  public NetworkModule_CreateHttpErrorUtilsFactory(NetworkModule module) {
    this.module = module;
  }

  @Override
  public HttpErrorUtils get() {
    return provideInstance(module);
  }

  public static HttpErrorUtils provideInstance(NetworkModule module) {
    return proxyCreateHttpErrorUtils(module);
  }

  public static NetworkModule_CreateHttpErrorUtilsFactory create(NetworkModule module) {
    return new NetworkModule_CreateHttpErrorUtilsFactory(module);
  }

  public static HttpErrorUtils proxyCreateHttpErrorUtils(NetworkModule instance) {
    return Preconditions.checkNotNull(
        instance.createHttpErrorUtils(),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
