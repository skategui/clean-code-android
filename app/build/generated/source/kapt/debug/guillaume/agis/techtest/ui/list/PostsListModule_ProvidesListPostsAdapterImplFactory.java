// Generated by Dagger (https://google.github.io/dagger).
package guillaume.agis.techtest.ui.list;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import guillaume.agis.techtest.ui.utils.DiffCallback;
import javax.inject.Provider;

public final class PostsListModule_ProvidesListPostsAdapterImplFactory
    implements Factory<ListPostsAdapter> {
  private final PostsListModule module;

  private final Provider<DiffCallback> diffCallbackProvider;

  public PostsListModule_ProvidesListPostsAdapterImplFactory(
      PostsListModule module, Provider<DiffCallback> diffCallbackProvider) {
    this.module = module;
    this.diffCallbackProvider = diffCallbackProvider;
  }

  @Override
  public ListPostsAdapter get() {
    return provideInstance(module, diffCallbackProvider);
  }

  public static ListPostsAdapter provideInstance(
      PostsListModule module, Provider<DiffCallback> diffCallbackProvider) {
    return proxyProvidesListPostsAdapterImpl(module, diffCallbackProvider.get());
  }

  public static PostsListModule_ProvidesListPostsAdapterImplFactory create(
      PostsListModule module, Provider<DiffCallback> diffCallbackProvider) {
    return new PostsListModule_ProvidesListPostsAdapterImplFactory(module, diffCallbackProvider);
  }

  public static ListPostsAdapter proxyProvidesListPostsAdapterImpl(
      PostsListModule instance, DiffCallback diffCallback) {
    return Preconditions.checkNotNull(
        instance.providesListPostsAdapterImpl(diffCallback),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
