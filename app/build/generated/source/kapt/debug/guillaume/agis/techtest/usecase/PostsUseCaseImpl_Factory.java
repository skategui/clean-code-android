// Generated by Dagger (https://google.github.io/dagger).
package guillaume.agis.techtest.usecase;

import dagger.internal.Factory;
import guillaume.agis.techtest.repo.PostsRepository;
import javax.inject.Provider;

public final class PostsUseCaseImpl_Factory implements Factory<PostsUseCaseImpl> {
  private final Provider<UsersUseCase> usersUseCaseProvider;

  private final Provider<PostsRepository> postsRepositoryProvider;

  public PostsUseCaseImpl_Factory(
      Provider<UsersUseCase> usersUseCaseProvider,
      Provider<PostsRepository> postsRepositoryProvider) {
    this.usersUseCaseProvider = usersUseCaseProvider;
    this.postsRepositoryProvider = postsRepositoryProvider;
  }

  @Override
  public PostsUseCaseImpl get() {
    return provideInstance(usersUseCaseProvider, postsRepositoryProvider);
  }

  public static PostsUseCaseImpl provideInstance(
      Provider<UsersUseCase> usersUseCaseProvider,
      Provider<PostsRepository> postsRepositoryProvider) {
    return new PostsUseCaseImpl(usersUseCaseProvider.get(), postsRepositoryProvider.get());
  }

  public static PostsUseCaseImpl_Factory create(
      Provider<UsersUseCase> usersUseCaseProvider,
      Provider<PostsRepository> postsRepositoryProvider) {
    return new PostsUseCaseImpl_Factory(usersUseCaseProvider, postsRepositoryProvider);
  }

  public static PostsUseCaseImpl newPostsUseCaseImpl(
      UsersUseCase usersUseCase, PostsRepository postsRepository) {
    return new PostsUseCaseImpl(usersUseCase, postsRepository);
  }
}
